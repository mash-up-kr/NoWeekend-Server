name: Deploy to NCP

on:
  push:
    branches:
      - chore/automatic-cd-test1

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: temurin

      - name: Build core-api jar
        run: ./gradlew :noweekend-core:core-api:clean :noweekend-core:core-api:bootJar

      - name: Build core-api Docker image
        run: docker build -t core-api:latest -f ./noweekend-core/core-api/Dockerfile ./noweekend-core/core-api

      - name: Save Docker images as tar
        run: |
          docker save core-api:latest -o core-api.tar

      - name: Copy Compose file to workspace
        # docker-compose.app.yml의 실제 위치가 루트가 아닐 경우 반드시 복사해줘야 함!
        # 만약 이미 루트면 생략 가능
        run: |
          cp ./docker-compose.app.yml .

      - name: Check files in workspace before SCP
        run: ls -al

      - name: SCP Docker images and Compose file to NCP
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.NCP_SERVER_HOST }}
          username: root
          key: ${{ secrets.NCP_SSH_KEY }}
          source: |
            core-api.tar
            docker-compose.app.yml
          target: /root/organized/app/

      - name: SSH into server and deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.NCP_SERVER_HOST }}
          username: root
          key: ${{ secrets.NCP_SSH_KEY }}
          script: |
            cd /root/organized/app
            docker load -i core-api.tar
            docker compose -f docker-compose.app.yml up --build -d
